[Database]
# Database URI in the SQLAlchemy format; a PostgreSQL database is suggested, but others _may_ work too
database_uri = postgres://

[Discord]
# Discord bot token, obtained at https://discordapp.com/developers/applications/
bot_token =
# Server id (guild) in which the bot should be used in (with Developer Mode on, RMB+Copy ID)
server_id =
# Channel in which all generic messages should be sent (again RMB+Copy ID)
main_channel =
# Time in minutes before the bot automatically disconnects from voice chat
afk_timer = 30
# Time in between two activity reports (viewable at https://ryg.steffo.eu/activity)
activityreport_sample_time = 600
# Enable song text easter eggs?
song_text_easter_eggs_enabled = True
# Maximum videos in queue to predownload
video_cache_size = 5
# Maximum time a video may take to become ready (download time) before being removed from the queue
max_ready_time = 30
# Enable radio messages?
radio_messages_enabled = False
# Number of videos between two radio messages
radio_messages_every = 5
# Command prefix
command_prefix = !

[Telegram]
# Telegram bot token, obtainable at https://t.me/BotFather
bot_token =
# Telegram main group id, where errors should be reported
main_group =

[Flask]
# Secret key, used to encrypt cookies
secret_key =

[reddit]
# Client API id obtainable at https://www.reddit.com/dev/api/
client_id =
# Client API secret obtainable at https://www.reddit.com/dev/api/
client_secret =
# Bot username
username =
# Bot password
password =

[Steam]
# Steam Developer API key, can be obtained at https://steamcommunity.com/dev/apikey
api_key =

[League of Legends]
# Riot Games Developer API key, can be obtained at https://developer.riotgames.com/, requires a registered project
riot_api_key =

[Osu!]
# osu! API key, can be obtained at https://osu.ppy.sh/p/api
ppy_api_key =

[Sentry]
# Sentry error-reporting token obtainable at https://sentry.io
token =
